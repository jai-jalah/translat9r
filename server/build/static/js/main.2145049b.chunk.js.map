{"version":3,"sources":["icon.svg","components/T9Form.js","App.js","reportWebVitals.js","index.js"],"names":["T9Form","useState","input","setInput","onSubmit","event","preventDefault","inputNumber","axios","post","then","response","console","log","data","catch","err","error","OutlinedInput","name","type","className","required","inputProps","style","width","textAlign","fontFamily","color","fontSize","fontWeight","value","placeholder","onChange","target","Button","variant","marginTop","backgroundColor","marginLeft","App","src","icon","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAAe,G,YAAA,IAA0B,kC,mECM1B,SAASA,IAAU,IAAD,EACLC,mBAAS,IADJ,mBACxBC,EADwB,KACjBC,EADiB,OAEHF,mBAAS,SAFN,6BAiB/B,OACE,8BACE,uBAAMG,SAfW,SAACC,GACpBA,EAAMC,iBAEN,IAAMC,EAAc,CAAEL,SAEtBM,IACGC,KAAK,mBAAoBF,GACzBG,MAAK,SAACC,GAAD,OAAcC,QAAQC,IAAIF,EAASG,SACxCC,OAAM,SAACC,GACNJ,QAAQK,MAAMD,OAMhB,UACE,cAACE,EAAA,EAAD,CACEC,KAAK,cACLC,KAAK,SACLC,UAAU,aACVC,SAAS,OACTC,WAAY,CACVC,MAAO,CACLC,MAAO,QACPC,UAAW,SACXC,WAAY,qBACZC,MAAO,UACPC,SAAU,OACVC,WAAY,SAGhBC,MAAO7B,EACP8B,YAAY,gCACZC,SAAU,SAAC5B,GAAD,OAAWF,EAASE,EAAM6B,OAAOH,UAE7C,uBACA,eAACI,EAAA,EAAD,CACEd,UAAU,gBACVD,KAAK,SACLgB,QAAQ,YACRZ,MAAO,CACLa,UAAW,KACXZ,MAAO,QACPa,gBAAiB,UACjBV,MAAO,UACPC,SAAU,MACVC,WAAY,QAVhB,oBAcE,cAAC,IAAD,CAAeN,MAAO,CAAEe,WAAY,gBCtD/B,SAASC,IAGtB,OACE,qBAAKnB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,mBAAGG,MAAO,CAAEI,MAAO,SAAnB,sCACA,+BACE,qBAAKa,IAAKC,EAAMC,IAAI,gBADtB,gBAIA,oBAAInB,MAAO,CAAEa,UAAW,MAAxB,yGAIA,cAACrC,EAAD,IACWY,QAAQC,IAAI,yBACvB,mBAAGW,MAAO,CAAEI,MAAO,QAASE,WAAY,OAAQD,SAAU,OAA1D,sCCvBR,IAYee,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2145049b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon.547b9800.svg\";","import React, { useState } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport { OutlinedInput, Button } from '@mui/material';\nimport TranslateIcon from '@mui/icons-material/Translate';\n\nexport default function T9Form() {\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('hello');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const inputNumber = { input };\n\n    axios\n      .post('/numberSubmitted', inputNumber)\n      .then((response) => console.log(response.data))\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <OutlinedInput\n          name='inputNumber'\n          type='number'\n          className='text-field'\n          required='true'\n          inputProps={{\n            style: {\n              width: '900px',\n              textAlign: 'center',\n              fontFamily: \"'Lato', sans-serif\",\n              color: '#70163c',\n              fontSize: '140%',\n              fontWeight: 'bold',\n            },\n          }}\n          value={input}\n          placeholder='Enter your number to convert!'\n          onChange={(event) => setInput(event.target.value)}\n        />\n        <br></br>\n        <Button\n          className='submit-button'\n          type='submit'\n          variant='contained'\n          style={{\n            marginTop: '2%',\n            width: '900px',\n            backgroundColor: '#70163c',\n            color: '#307351',\n            fontSize: '80%',\n            fontWeight: 'bold',\n          }}\n        >\n          Convert\n          <TranslateIcon style={{ marginLeft: '2%' }} />\n        </Button>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport icon from './icon.svg';\nimport T9Form from './components/T9Form';\nimport Results from './components/Results';\n\nexport default function App() {\n  const loading = true;\n\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <p style={{ color: 'white' }}>Follow the phone down ;)</p>\n        <h1>\n          <img src={icon} alt='brick phone' />\n          TranslaT9r\n        </h1>\n        <h4 style={{ marginTop: '1%' }}>\n          Give us your T9 Number, and we'll give you a list of all the possible\n          words you could make!\n        </h4>\n        <T9Form />\n        {loading ? console.log('results still loading') : <Results />}\n        <p style={{ color: 'black', fontWeight: 'bold', fontSize: '85%' }}>\n          Â© Jai Jalah 2021\n        </p>\n      </header>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}